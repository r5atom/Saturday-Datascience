## ***************************************************************************
## * LINES                                                                   *
## ***************************************************************************
## See https://matplotlib.org/api/artist_api.html#module-matplotlib.lines
## for more information on line properties.
lines.linewidth : 2.0   ## line width in points
lines.linestyle : -     ## solid line
lines.color     : C0    ## has no affect on plot(); see axes.prop_cycle
lines.marker          : None  ## the default marker
lines.markerfacecolor : C1    ## the default marker face color
lines.markeredgecolor : black ## the default marker edge color
# ^^ This also affects tick lines ^^
lines.markeredgewidth : 2.0   ## the line width around the marker symbol
lines.markersize      : 8.0   ## marker size, in points
lines.dash_joinstyle  : bevel        ## {miter, round, bevel}
lines.dash_capstyle   : butt         ## {butt, round, projecting}
lines.solid_joinstyle : round        ## {miter, round, bevel}
lines.solid_capstyle  : projecting   ## {butt, round, projecting}
lines.antialiased : True   ## render lines in antialiased (no jaggies)

## The three standard dash patterns.  These are scaled by the linewidth.
lines.dashed_pattern : 4, 4
lines.dashdot_pattern : 4, 2, 2, 2
lines.dotted_pattern : 1, 1
lines.scale_dashes : True

markers.fillstyle : full  ## {full, left, right, bottom, top, none}


## ***************************************************************************
## * PATCHES                                                                 *
## ***************************************************************************
## Patches are graphical objects that fill 2D space, like polygons or circles.
## See https://matplotlib.org/api/artist_api.html#module-matplotlib.patches
## for more information on patch properties.
patch.linewidth       : 2.0      ## edge width in points.
patch.facecolor       : C1
patch.edgecolor       : black    ## if forced, or patch is not filled
patch.force_edgecolor : True     ## True to always use edgecolor
patch.antialiased     : True     ## render patches in antialiased (no jaggies)

## ***************************************************************************
## * HATCHES                                                                 *
## ***************************************************************************
hatch.color     : black
hatch.linewidth : 2.0

## ***************************************************************************
## * BOXPLOT                                                                 *
## ***************************************************************************
boxplot.notch       : False
boxplot.vertical    : True
boxplot.whiskers    : 1.5
boxplot.bootstrap   : None
boxplot.patchartist : False
boxplot.showmeans   : False
boxplot.showcaps    : True
boxplot.showbox     : True
boxplot.showfliers  : True
boxplot.meanline    : False

boxplot.flierprops.color           : black
boxplot.flierprops.marker          : o
boxplot.flierprops.markerfacecolor : none
boxplot.flierprops.markeredgecolor : white
boxplot.flierprops.markeredgewidth : 2.0
boxplot.flierprops.markersize      : 8.0
boxplot.flierprops.linestyle       : none
boxplot.flierprops.linewidth       : 2.0

boxplot.boxprops.color     : black
boxplot.boxprops.linewidth : 2.0
boxplot.boxprops.linestyle : -

boxplot.whiskerprops.color     : black
boxplot.whiskerprops.linewidth : 2.0
boxplot.whiskerprops.linestyle : -

boxplot.capprops.color     : black
boxplot.capprops.linewidth : 2.0
boxplot.capprops.linestyle : -

boxplot.medianprops.color     : C1
boxplot.medianprops.linewidth : 2.0
boxplot.medianprops.linestyle : -

boxplot.meanprops.color           : C2
boxplot.meanprops.marker          : ^
boxplot.meanprops.markerfacecolor : C2
boxplot.meanprops.markeredgecolor : C2
boxplot.meanprops.markersize      : 8.0
boxplot.meanprops.linestyle       : --
boxplot.meanprops.linewidth       : 2.0


## ***************************************************************************
## * FONT                                                                    *
## ***************************************************************************
## The font properties used by `text.Text`.
## See https://matplotlib.org/api/font_manager_api.html for more information
## on font properties.  The 6 font properties used for font matching are
## given below with their default values.
##
## The font.family property has five values:
##     - 'serif' (e.g., Times),
##     - 'sans-serif' (e.g., Helvetica),
##     - 'cursive' (e.g., Zapf-Chancery),
##     - 'fantasy' (e.g., Western), and
##     - 'monospace' (e.g., Courier).
## Each of these font families has a default list of font names in decreasing
## order of priority associated with them.  When text.usetex is False,
## font.family may also be one or more concrete font names.
##
## The font.style property has three values: normal (or roman), italic
## or oblique.  The oblique style will be used for italic, if it is not
## present.
##
## The font.variant property has two values: normal or small-caps.  For
## TrueType fonts, which are scalable fonts, small-caps is equivalent
## to using a font size of 'smaller', or about 83%% of the current font
## size.
##
## The font.weight property has effectively 13 values: normal, bold,
## bolder, lighter, 100, 200, 300, ..., 900.  Normal is the same as
## 400, and bold is 700.  bolder and lighter are relative values with
## respect to the current weight.
##
## The font.stretch property has 11 values: ultra-condensed,
## extra-condensed, condensed, semi-condensed, normal, semi-expanded,
## expanded, extra-expanded, ultra-expanded, wider, and narrower.  This
## property is not currently implemented.
##
## The font.size property is the default font size for text, given in pts.
## 10 pt is the standard value.
##
## Note that font.size controls default text sizes.  To configure
## special text sizes tick labels, axes, labels, title, etc, see the rc
## settings for axes and ticks.  Special text sizes can be defined
## relative to font.size, using the following values: xx-small, x-small,
## small, medium, large, x-large, xx-large, larger, or smaller

font.family  : sans-serif
font.style   : italic
font.variant : normal
font.weight  : normal
font.stretch : normal
font.size    : 12.0

font.serif      : DejaVu Serif, Bitstream Vera Serif, Computer Modern Roman, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif
font.sans-serif : Helvetica, Arial, sans-serif, DejaVu Sans,
font.cursive    : Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, cursive
font.fantasy    : Comic Neue, Comic Sans MS, Chicago, Charcoal, ImpactWestern, Humor Sans, xkcd, fantasy
font.monospace  : DejaVu Sans Mono, Bitstream Vera Sans Mono, Computer Modern Typewriter, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace

## ***************************************************************************
## * TEXT                                                                    *
## ***************************************************************************
## The text properties used by `text.Text`.
## See https://matplotlib.org/api/artist_api.html#module-matplotlib.text
## for more information on text properties
text.color : black


## ***************************************************************************
## * AXES                                                                    *
## ***************************************************************************
## Following are default face and edge colors, default tick sizes,
## default fontsizes for ticklabels, and so on.  See
## https://matplotlib.org/api/axes_api.html#module-matplotlib.axes
axes.facecolor     : white    ## axes background color
axes.edgecolor     : black    ## axes edge color
axes.linewidth     : 2.0      ## edge linewidth
axes.grid          : False    ## display grid or not
axes.grid.axis     : both     ## which axis the grid should apply to
axes.grid.which    : major    ## gridlines at {major, minor, both} ticks
#axes.titlelocation: center   ## alignment of the title: {left, right, center}
# ^^ not supported ^^
axes.titlesize     : 32.0     ## fontsize of the axes title
axes.titleweight   : bold     ## font weight of title
#axes.titlecolor    : auto     ## color of the axes title, auto falls back to text.color
                              ## as default value
# ^^ not supported ^^
axes.titlepad      : 6.0      ## pad between axes and title in points
axes.labelsize     : 32.0     ## fontsize of the x any y labels
axes.labelpad      : 4.0      ## space between label and axis
axes.labelweight   : bold     ## weight of the x and y labels
axes.labelcolor    : black
axes.axisbelow     : True     ## draw axis gridlines and ticks:
                              ##     - below patches (True)
                              ##     - above patches but below lines ('line')
                              ##     - above all (False)

#axes.formatter.limits : -5, 6  ## use scientific notation if log10
                                ## of the axis range is smaller than the
                                ## first or larger than the second
axes.formatter.use_locale : False   ## When True, format tick labels
                                    ## according to the user's locale.
                                    ## For example, use ',' as a decimal
                                    ## separator in the fr_FR locale.
#axes.formatter.use_mathtext : False  ## When True, use mathtext for scientific
                                      ## notation.
#axes.formatter.min_exponent : 0  ## minimum exponent to format in scientific notation
#axes.formatter.useoffset : True  ## If True, the tick label formatter
                                  ## will default to labeling ticks relative
                                  ## to an offset when the data range is
                                  ## small compared to the minimum absolute
                                  ## value of the data.
#axes.formatter.offset_threshold : 4  ## When useoffset is True, the offset
                                      ## will be used when it can remove
                                      ## at least this number of significant
                                      ## digits from tick labels.

axes.spines.left   : True   ## display axis spines
axes.spines.bottom : True
axes.spines.top    : False
axes.spines.right  : False

#axes.unicode_minus : True  ## use Unicode for the minus symbol
                            ## rather than hyphen.  See
                            ## https://en.wikipedia.org/wiki/Plus_and_minus_signs#Character_codes
#axes.prop_cycle : cycler('color', ['1f77b4', 'ff7f0e', '2ca02c', 'd62728', '9467bd', '8c564b', 'e377c2', '7f7f7f', 'bcbd22', '17becf'])
axes.prop_cycle: cycler('color', ['0.00', '0.50', '0.75', '0.875', '0.9375', '0.96875'])
                   ## color cycle for plot lines as list of string colorspecs:
                   ##     single letter, long name, or web-style hex
				   ## As opposed to all other paramters in this file, the color
				   ## values must be enclosed in quotes for this parameter,
				   #  e.g. '1f77b4', instead of 1f77b4.
                   ## See also https://matplotlib.org/tutorials/intermediate/color_cycle.html
                   ## for more details on prop_cycle usage.
#axes.autolimit_mode : data  ## How to scale axes limits to the data.  By using:
                             ##     - "data" to use data limits, plus some margin
                             ##     - "round_numbers" move to the nearest "round" number
#axes.xmargin   : .05   ## x margin.  See `axes.Axes.margins`
#axes.ymargin   : .05   ## y margin.  See `axes.Axes.margins`
#polaraxes.grid : True  ## display grid on polar axes
#axes3d.grid    : True  ## display grid on 3d axes


## ***************************************************************************
## * TICKS                                                                   *
## ***************************************************************************
## See https://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick
xtick.top           : False    ## draw ticks on the top side
xtick.bottom        : True     ## draw ticks on the bottom side
xtick.labeltop      : False    ## draw label on the top
xtick.labelbottom   : True     ## draw label on the bottom
xtick.major.size    : 7.2      ## major tick size in points
xtick.minor.size    : 3.6      ## minor tick size in points
xtick.major.width   : 2.0      ## major tick width in points
xtick.minor.width   : 2.0      ## minor tick width in points
xtick.major.pad     : 3.6      ## distance to major tick label in points
xtick.minor.pad     : 3.6      ## distance to the minor tick label in points
xtick.color         : black    ## color of the tick labels
xtick.labelsize     : 32.0     ## fontsize of the tick labels
xtick.direction     : out      ## direction: {in, out, inout}
xtick.minor.visible : True     ## visibility of minor ticks on x-axis
xtick.major.top     : False    ## draw x axis top major ticks
xtick.major.bottom  : True     ## draw x axis bottom major ticks
xtick.minor.top     : False    ## draw x axis top minor ticks
xtick.minor.bottom  : True     ## draw x axis bottom minor ticks
xtick.alignment     : center   ## alignment of xticks

ytick.left          : True     ##
ytick.right         : False    ##
ytick.labelleft     : True     ##
ytick.labelright    : False    ##
ytick.major.size    : 7.2      ##
ytick.minor.size    : 3.6      ##
ytick.major.width   : 2.0      ##
ytick.minor.width   : 2.0      ##
ytick.major.pad     : 3.6      ##
ytick.minor.pad     : 3.6      ##
ytick.color         : black    ##
ytick.labelsize     : 32.0     ##
ytick.direction     : out      ##
ytick.minor.visible : True     ##
ytick.major.left    : True     ##
ytick.major.right   : False    ##
ytick.minor.left    : True     ##
ytick.minor.right   : False    ##
ytick.alignment     : center_baseline   ##


## Figure

figure.edgecolor: white
figure.facecolor: white
figure.figsize: 8.0, 8.0
figure.dpi : 150

savefig.dpi : 200
savefig.edgecolor: white
savefig.facecolor: white
savefig.bbox: tight


## legend
legend.fontsize: 10
legend.frameon: False
legend.borderaxespad: 0.5
legend.borderpad: 0.4
legend.columnspacing: 2.
legend.edgecolor: inherit
legend.facecolor: white
legend.fancybox: False
legend.framealpha: None
legend.handleheight: 0.7
legend.handlelength: 2.
legend.handletextpad: 0.8
legend.labelspacing: 0.5
#legend.loc: upper right
legend.markerscale: 1.0
legend.numpoints: 2
legend.scatterpoints: 3
legend.shadow: True


#lines.linewidth: 2
#lines.markersize: 8
#lines.color: black
#patch.edgecolor: black
#patch.facecolor: gray
#axes.labelcolor: black
#axes.titlesize : 32
#axes.titleweight: bold
#axes.labelsize : 32
#xtick.color: black
#ytick.color: black
#xtick.labelsize: 32
#ytick.labelsize: 32
#xtick.labelstyle: italic
#ytick.labelstyle: italic
#xtick.minor.visible: True
#ytick.minor.visible: True

grid.color: black
image.cmap: Greys	
